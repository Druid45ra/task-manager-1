{"version":3,"sources":["components/Header.js","components/Task.js","components/TaskList.js","components/AddTask.js","pages/Register.js","services/api.js","context/AuthContext.js","pages/Login.js","App.js","index.js"],"names":["Header","_jsx","children","Task","_ref","task","_jsxs","title","description","TaskList","tasks","onDelete","onToggle","_Fragment","length","map","id","AddTask","onAdd","setTask","useState","setDescription","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","Register","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","history","useHistory","async","user","fetch","method","headers","body","JSON","stringify","ok","push","error","console","api","axios","create","baseURL","AuthContext","createContext","Login","login","useContext","response","post","data","token","err","App","setTasks","useEffect","tasksFromServer","fetchTasks","getTasks","res","json","fetchTask","concat","Router","className","Switch","Route","path","component","filter","taskToToggle","updatedTask","_objectSpread","reminder","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"yNAUeA,MARAA,IAEXC,cAAA,UAAAC,SACED,cAAA,MAAAC,SAAI,mBCMKC,MATFC,IAAe,IAAd,KAAEC,GAAMD,EACpB,OACEE,eAAA,OAAAJ,SAAA,CACED,cAAA,MAAAC,SAAKG,EAAKE,QACVN,cAAA,KAAAC,SAAIG,EAAKG,gBACL,ECeKC,MAnBEL,IAAoC,IAAnC,MAAEM,EAAK,SAAEC,EAAQ,SAAEC,GAAUR,EAC7C,OACEH,cAAAY,WAAA,CAAAX,SACGQ,EAAMI,OAAS,EACdJ,EAAMK,KAAKV,GACTJ,cAACE,EAAI,CAEHE,KAAMA,EACNM,SAAUA,EACVC,SAAUA,GAHLP,EAAKW,MAOdf,cAAA,KAAAC,SAAG,sBAEJ,EC2BQe,MA3CCb,IAAgB,IAAf,MAAEc,GAAOd,EACxB,MAAOC,EAAMc,GAAWC,mBAAS,KAC1BZ,EAAaa,GAAkBD,mBAAS,IAgB/C,OACEd,eAAA,QAAMgB,SAfUC,IAChBA,EAAEC,iBAEGnB,GAKLa,EAAM,CAAEb,OAAMG,gBAEdW,EAAQ,IACRE,EAAe,KAPbI,MAAM,oBAOU,EAIOvB,SAAA,CACvBI,eAAA,OAAAJ,SAAA,CACED,cAAA,SAAAC,SAAO,SACPD,cAAA,SACEyB,KAAK,OACLC,YAAY,WACZC,MAAOvB,EACPwB,SAAWN,GAAMJ,EAAQI,EAAEO,OAAOF,YAGtCtB,eAAA,OAAAJ,SAAA,CACED,cAAA,SAAAC,SAAO,gBACPD,cAAA,SACEyB,KAAK,OACLC,YAAY,kBACZC,MAAOpB,EACPqB,SAAWN,GAAMF,EAAeE,EAAEO,OAAOF,YAG7C3B,cAAA,SAAOyB,KAAK,SAASE,MAAM,gBACtB,EC0CIG,MAhFEA,KACf,MAAOC,EAAMC,GAAWb,mBAAS,KAC1Bc,EAAOC,GAAYf,mBAAS,KAC5BgB,EAAUC,GAAejB,mBAAS,KAClCkB,EAAiBC,GAAsBnB,mBAAS,IACjDoB,EAAUC,cAgChB,OACEnC,eAAA,QAAMgB,SA/BSoB,UAGf,GAFAnB,EAAEC,iBAEEY,IAAaE,EAEf,YADAb,MAAM,0BAIR,MAAMkB,EAAO,CAAEX,OAAME,QAAOE,YAE5B,WACyBQ,MAAM,sBAAuB,CAClDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,MAGVO,GACXV,EAAQW,KAAK,UAEb1B,MAAM,qBAEV,CAAE,MAAO2B,GACPC,QAAQD,MAAM,SAAUA,GACxB3B,MAAM,qBACR,GAIyBvB,SAAA,CACvBI,eAAA,OAAAJ,SAAA,CACED,cAAA,SAAAC,SAAO,SACPD,cAAA,SACEyB,KAAK,OACLC,YAAY,aACZC,MAAOI,EACPH,SAAWN,GAAMU,EAAQV,EAAEO,OAAOF,YAGtCtB,eAAA,OAAAJ,SAAA,CACED,cAAA,SAAAC,SAAO,UACPD,cAAA,SACEyB,KAAK,QACLC,YAAY,cACZC,MAAOM,EACPL,SAAWN,GAAMY,EAASZ,EAAEO,OAAOF,YAGvCtB,eAAA,OAAAJ,SAAA,CACED,cAAA,SAAAC,SAAO,aACPD,cAAA,SACEyB,KAAK,WACLC,YAAY,iBACZC,MAAOQ,EACPP,SAAWN,GAAMc,EAAYd,EAAEO,OAAOF,YAG1CtB,eAAA,OAAAJ,SAAA,CACED,cAAA,SAAAC,SAAO,qBACPD,cAAA,SACEyB,KAAK,WACLC,YAAY,mBACZC,MAAOU,EACPT,SAAWN,GAAMgB,EAAmBhB,EAAEO,OAAOF,YAGjD3B,cAAA,SAAOyB,KAAK,SAASE,MAAM,eACtB,ECzEI0B,M,MAJHC,EAAMC,OAAO,CACvBC,QAAS,8BCAX,MAAMC,EAAcC,0BCsCLC,MApCDA,KACZ,MAAO1B,EAAOC,GAAYf,mBAAS,KAC5BgB,EAAUC,GAAejB,mBAAS,KACnC,MAAEyC,GD2BmBC,qBAAWJ,GC1BhClB,EAAUC,cAahB,OACEnC,eAAA,QAAMgB,SAZaoB,UACnBnB,EAAEC,iBACF,IACE,MAAMuC,QAAiBT,EAAIU,KAAK,cAAe,CAAE9B,QAAOE,aACxDyB,EAAME,EAASE,KAAKC,OACpB1B,EAAQW,KAAK,aACf,CAAE,MAAOgB,GACP1C,MAAM,eACR,GAI6BvB,SAAA,CAC3BD,cAAA,SACEyB,KAAK,QACLC,YAAY,QACZC,MAAOM,EACPL,SAAWN,GAAMY,EAASZ,EAAEO,OAAOF,SAErC3B,cAAA,SACEyB,KAAK,WACLC,YAAY,WACZC,MAAOQ,EACPP,SAAWN,GAAMc,EAAYd,EAAEO,OAAOF,SAExC3B,cAAA,UAAQyB,KAAK,SAAQxB,SAAC,YACjB,ECgDIkE,MA7EHA,KACV,MAAO1D,EAAO2D,GAAYjD,mBAAS,IAEnCkD,qBAAU,KACS5B,WACf,MAAM6B,QAAwBC,IAC9BH,EAASE,EAAgB,EAG3BE,EAAU,GACT,IAEH,MAAMD,EAAa9B,UACjB,MAAMgC,QAAY9B,MAAM,cAExB,aADmB8B,EAAIC,MACZ,EAuCPC,EAAYlC,UAChB,MAAMgC,QAAY9B,MAAM,cAADiC,OAAe7D,IAEtC,aADmB0D,EAAIC,MACZ,EAGb,OACE1E,cAAC6E,IAAM,CAAA5E,SACLI,eAAA,OAAKyE,UAAU,YAAW7E,SAAA,CACxBD,cAACD,EAAM,IACPM,eAAC0E,IAAM,CAAA9E,SAAA,CACLD,cAACgF,IAAK,CAACC,KAAK,YAAYC,UAAWpD,IACnC9B,cAACgF,IAAK,CAACC,KAAK,SAASC,UAAWvB,IAChCtD,eAAC2E,IAAK,CAACC,KAAK,aAAYhF,SAAA,CACtBD,cAACQ,EAAQ,CAACC,MAAOA,EAAOC,SArCf+B,gBACXE,MAAM,cAADiC,OAAe7D,GAAM,CAC9B6B,OAAQ,WAGVwB,EAAS3D,EAAM0E,QAAQ/E,GAASA,EAAKW,KAAOA,IAAI,EAgCMJ,SA7BjC8B,UACrB,MAAM2C,QAAqBT,EAAU5D,GAC/BsE,EAAWC,wBAAA,GAAQF,GAAY,IAAEG,UAAWH,EAAaG,WAEzDd,QAAY9B,MAAM,cAADiC,OAAe7D,GAAM,CAC1C6B,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUqC,WAGJZ,EAAIC,MAAM,IAkBrB1E,cAACgB,EAAO,CAACC,MAnDHwB,UACd,MAAMgC,QAAY9B,MAAM,aAAc,CACpCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU5C,KAGjB4D,QAAaS,EAAIC,OACvBN,EAAS,IAAI3D,EAAOuD,GAAM,cA6CjB,EC5EbwB,IAASC,OACPzF,cAAC0F,IAAMC,WAAU,CAAA1F,SACfD,cAACmE,EAAG,MAENyB,SAASC,eAAe,Q","file":"static/js/main.5a4fb8ee.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>Task Manager</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Task = ({ task }) => {\n  return (\n    <div>\n      <h3>{task.title}</h3>\n      <p>{task.description}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\nimport Task from \"./Task\";\n\nconst TaskList = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.length > 0 ? (\n        tasks.map((task) => (\n          <Task\n            key={task.id}\n            task={task}\n            onDelete={onDelete}\n            onToggle={onToggle}\n          />\n        ))\n      ) : (\n        <p>No tasks to show</p>\n      )}\n    </>\n  );\n};\n\nexport default TaskList;\n","import React, { useState } from \"react\";\n\nconst AddTask = ({ onAdd }) => {\n  const [task, setTask] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!task) {\n      alert(\"Please add a task\");\n      return;\n    }\n\n    onAdd({ task, description });\n\n    setTask(\"\");\n    setDescription(\"\");\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        <label>Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={task}\n          onChange={(e) => setTask(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Description</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n      </div>\n      <input type=\"submit\" value=\"Save Task\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Register = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const history = useHistory();\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n\n    const user = { name, email, password };\n\n    try {\n      const response = await fetch(\"/api/users/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      });\n\n      if (response.ok) {\n        history.push(\"/login\");\n      } else {\n        alert(\"Failed to register\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Failed to register\");\n    }\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        <label>Name</label>\n        <input\n          type=\"text\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Email</label>\n        <input\n          type=\"email\"\n          placeholder=\"Enter email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Password</label>\n        <input\n          type=\"password\"\n          placeholder=\"Enter password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Confirm Password</label>\n        <input\n          type=\"password\"\n          placeholder=\"Confirm password\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n        />\n      </div>\n      <input type=\"submit\" value=\"Register\" />\n    </form>\n  );\n};\n\nexport default Register;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api', // Asigură-te că URL-ul de bază este corect\n});\n\nexport default api;\n","import { createContext, useContext, useState, useEffect } from \"react\";\nimport api from \"../services/api\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const login = (token) => {\n    localStorage.setItem(\"token\", token);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        await api.get(\"/auth/check\"); // Optional: Add a protected route in backend\n      } catch (err) {\n        logout();\n      }\n    };\n    checkAuth();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../services/api\";\nimport { useAuth } from \"../context/AuthContext\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { login } = useAuth();\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await api.post(\"/auth/login\", { email, password });\n      login(response.data.token);\n      history.push(\"/dashboard\");\n    } catch (err) {\n      alert(\"Login failed\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport AddTask from \"./components/AddTask\";\nimport Register from \"./pages/Register\";\nimport Login from \"./pages/Login\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"/api/tasks\");\n    const data = await res.json();\n    return data;\n  };\n\n  const addTask = async (task) => {\n    const res = await fetch(\"/api/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  };\n\n  const deleteTask = async (id) => {\n    await fetch(`/api/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const res = await fetch(`/api/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updatedTask),\n    });\n\n    const data = await res.json();\n  };\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`/api/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header />\n        <Switch>\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/dashboard\">\n            <TaskList tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n            <AddTask onAdd={addTask} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}